// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Lab7Context))]
    [Migration("20230515071904_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Est neque reiciendis explicabo dolores eius earum ea velit. Mollitia blanditiis voluptates. Velit dolorem sunt ducimus quo id et fuga ea.",
                            Name = "ex"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Voluptas harum quo ipsa et. Modi tenetur maiores dolorem velit dolorem error earum et. Quod velit est eligendi consequatur doloremque ea dicta maiores. Quam corporis omnis non et quaerat ullam.",
                            Name = "repudiandae"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A eum et unde. Id laborum aliquam qui et cumque. Accusamus ad eum qui.",
                            Name = "voluptate"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Qui quod eveniet ut enim aut aspernatur illo neque. Praesentium numquam voluptas eum placeat et cum deserunt sit sunt. Ducimus ut vitae consequatur. Veritatis fuga necessitatibus.",
                            Name = "ut"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ut alias beatae adipisci quaerat numquam architecto consequatur. Cum iste repellendus molestiae. Tenetur beatae eaque consequatur praesentium hic asperiores nisi.",
                            Name = "ipsam"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Necessitatibus saepe animi et est ipsa atque error. Ab eius suscipit. Similique sunt ipsam totam assumenda veritatis rerum. Dignissimos odit vero qui repellat sunt sed. Beatae laborum ut necessitatibus ut quo dolor.",
                            Name = "quia"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Natus ratione sint cum quidem. Perspiciatis provident ipsam id qui. A enim nam natus odit nulla rerum. Reiciendis omnis perspiciatis molestiae enim cum sint dolores qui. Maxime ullam velit quisquam esse sed. Sunt voluptatem rerum non ut aut sit ut minima.",
                            Name = "odit"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Voluptatem qui maxime quasi qui et sit. Dicta ipsam non soluta ut voluptatem. Enim unde sed consequatur dolor aut cupiditate amet. Nesciunt enim quis et consequatur dolorem officiis vel dolorem distinctio. In ullam saepe eius et id voluptas modi vero sit.",
                            Name = "quo"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Doloremque quam omnis ut delectus eos fugit sit placeat. Voluptas aut iure odio ipsa. Et odio sint laudantium esse qui.",
                            Name = "ut"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Totam qui in quia quia recusandae ullam incidunt ad. Ut explicabo consequatur. Amet sint voluptatibus praesentium optio harum quia consequatur et. Omnis vel occaecati ut illo voluptate. Rerum aut voluptatem molestias qui provident est. Optio quae omnis et aut.",
                            Name = "dolores"
                        });
                });

            modelBuilder.Entity("backend.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Togo",
                            Name = "Veum, Jenkins and Stanton"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Ukraine",
                            Name = "Beer LLC"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Central African Republic",
                            Name = "Waters, Abbott and Grant"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Central African Republic",
                            Name = "Mayert, Hills and Senger"
                        },
                        new
                        {
                            Id = 5,
                            Location = "Germany",
                            Name = "Cole and Sons"
                        },
                        new
                        {
                            Id = 6,
                            Location = "Jersey",
                            Name = "Grimes - Kemmer"
                        },
                        new
                        {
                            Id = 7,
                            Location = "Sao Tome and Principe",
                            Name = "Pollich - Raynor"
                        },
                        new
                        {
                            Id = 8,
                            Location = "Nauru",
                            Name = "Larkin Group"
                        },
                        new
                        {
                            Id = 9,
                            Location = "Italy",
                            Name = "Glover, Bruen and Quitzon"
                        },
                        new
                        {
                            Id = 10,
                            Location = "Italy",
                            Name = "O'Kon, Spencer and Nikolaus"
                        });
                });

            modelBuilder.Entity("backend.Models.ManufacturerFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ManufacturerFood");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodId = 1,
                            ManufacturerId = 9
                        },
                        new
                        {
                            Id = 2,
                            FoodId = 2,
                            ManufacturerId = 5
                        },
                        new
                        {
                            Id = 3,
                            FoodId = 3,
                            ManufacturerId = 1
                        },
                        new
                        {
                            Id = 4,
                            FoodId = 4,
                            ManufacturerId = 4
                        },
                        new
                        {
                            Id = 5,
                            FoodId = 5,
                            ManufacturerId = 7
                        },
                        new
                        {
                            Id = 6,
                            FoodId = 6,
                            ManufacturerId = 10
                        },
                        new
                        {
                            Id = 7,
                            FoodId = 7,
                            ManufacturerId = 10
                        },
                        new
                        {
                            Id = 8,
                            FoodId = 8,
                            ManufacturerId = 5
                        },
                        new
                        {
                            Id = 9,
                            FoodId = 9,
                            ManufacturerId = 9
                        },
                        new
                        {
                            Id = 10,
                            FoodId = 10,
                            ManufacturerId = 8
                        });
                });

            modelBuilder.Entity("backend.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerId = 4,
                            Name = "Model 3",
                            Speed = 308
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerId = 5,
                            Name = "ATS",
                            Speed = 425
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerId = 4,
                            Name = "Fiesta",
                            Speed = 345
                        },
                        new
                        {
                            Id = 4,
                            ManufacturerId = 4,
                            Name = "Countach",
                            Speed = 267
                        },
                        new
                        {
                            Id = 5,
                            ManufacturerId = 10,
                            Name = "Volt",
                            Speed = 153
                        },
                        new
                        {
                            Id = 6,
                            ManufacturerId = 2,
                            Name = "A8",
                            Speed = 211
                        },
                        new
                        {
                            Id = 7,
                            ManufacturerId = 2,
                            Name = "ATS",
                            Speed = 355
                        },
                        new
                        {
                            Id = 8,
                            ManufacturerId = 6,
                            Name = "LeBaron",
                            Speed = 314
                        },
                        new
                        {
                            Id = 9,
                            ManufacturerId = 2,
                            Name = "Aventador",
                            Speed = 290
                        },
                        new
                        {
                            Id = 10,
                            ManufacturerId = 6,
                            Name = "Charger",
                            Speed = 292
                        });
                });

            modelBuilder.Entity("backend.Models.ManufacturerFood", b =>
                {
                    b.HasOne("backend.Models.Food", "Food")
                        .WithMany("manufacturerFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Manufacturer", "Manufacturer")
                        .WithMany("ManufacturerFoods")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.Vehicle", b =>
                {
                    b.HasOne("backend.Models.Manufacturer", "Manufacturer")
                        .WithMany("Vehicles")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.Food", b =>
                {
                    b.Navigation("manufacturerFoods");
                });

            modelBuilder.Entity("backend.Models.Manufacturer", b =>
                {
                    b.Navigation("ManufacturerFoods");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
