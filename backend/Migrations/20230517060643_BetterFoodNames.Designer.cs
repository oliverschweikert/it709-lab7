// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Lab7Context))]
    [Migration("20230517060643_BetterFoodNames")]
    partial class BetterFoodNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Nihil doloribus et repellendus maxime nobis. Repellat ducimus enim. Quia eaque alias rerum sed.",
                            Name = "Sushi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sed officia nostrum quidem dolores non sint vel. Aut dolorem aut et quia ipsam rerum molestiae facilis. Sit nobis quod dicta dolores aspernatur aperiam. Harum officiis accusantium quae. Odit ut autem omnis quia ut ducimus quos sequi.",
                            Name = "Sushi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Est laudantium accusamus eligendi est adipisci nostrum est et. Mollitia ut doloribus doloremque. Voluptas nobis ratione cupiditate.",
                            Name = "Kebab"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Possimus quaerat eaque labore culpa cum eum ipsam eos assumenda. Voluptatem sapiente illo cum est tenetur excepturi molestiae necessitatibus dolor. Et sint nihil enim. Tempora sit laudantium et vel. Nulla omnis quia quasi quis quia sint omnis dolores. Nihil optio consequatur.",
                            Name = "Kebab"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Maxime maiores itaque ut. Non error aliquid. Quis aut saepe expedita sunt ut commodi fugiat unde. Temporibus laboriosam sed qui. Quod omnis alias quasi assumenda est reprehenderit. Reiciendis totam sed esse deserunt enim quam dicta.",
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Quis sit voluptatum aut ut ut et labore. Eveniet aut pariatur dolore. Expedita similique et optio assumenda cupiditate voluptatem. Odit est non ea eos reiciendis libero. In ut et impedit.",
                            Name = "Burger"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Quo ea neque rerum incidunt iusto vel quam autem. Ipsa sed eius. Minus tempore eius non. Molestiae qui reprehenderit earum reprehenderit deleniti. Cumque quia nesciunt est quisquam aliquam architecto tenetur. Voluptas libero velit quibusdam est.",
                            Name = "Kebab"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sit molestias dolorum aperiam et quia. Possimus ea sunt ut illo odio. Nam excepturi aspernatur. Eos a tenetur aut quia praesentium fugit.",
                            Name = "Sushi"
                        },
                        new
                        {
                            Id = 9,
                            Description = "At eos enim est amet qui magnam qui incidunt. Debitis ipsam ad et. Vitae ipsam id autem commodi. Qui et quas est. Cupiditate asperiores distinctio aut commodi molestias debitis ratione asperiores ratione.",
                            Name = "Fries"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Et architecto ut. Sint sit qui quas quod. Commodi qui fugiat voluptas ducimus alias et vitae.",
                            Name = "Coke"
                        });
                });

            modelBuilder.Entity("backend.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Poland",
                            Name = "Stoltenberg - Tromp"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Guinea-Bissau",
                            Name = "Metz, Welch and D'Amore"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Turks and Caicos Islands",
                            Name = "Legros LLC"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Sweden",
                            Name = "Leuschke - Boehm"
                        },
                        new
                        {
                            Id = 5,
                            Location = "Zambia",
                            Name = "O'Connell, Lang and Nolan"
                        },
                        new
                        {
                            Id = 6,
                            Location = "India",
                            Name = "Borer Inc"
                        },
                        new
                        {
                            Id = 7,
                            Location = "New Zealand",
                            Name = "Spencer, Stehr and Weber"
                        },
                        new
                        {
                            Id = 8,
                            Location = "Brazil",
                            Name = "McLaughlin Group"
                        },
                        new
                        {
                            Id = 9,
                            Location = "Netherlands",
                            Name = "Kilback Group"
                        },
                        new
                        {
                            Id = 10,
                            Location = "Algeria",
                            Name = "Wolf - Cartwright"
                        });
                });

            modelBuilder.Entity("backend.Models.ManufacturerFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ManufacturerFood");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodId = 1,
                            ManufacturerId = 9
                        },
                        new
                        {
                            Id = 2,
                            FoodId = 2,
                            ManufacturerId = 9
                        },
                        new
                        {
                            Id = 3,
                            FoodId = 3,
                            ManufacturerId = 7
                        },
                        new
                        {
                            Id = 4,
                            FoodId = 4,
                            ManufacturerId = 4
                        },
                        new
                        {
                            Id = 5,
                            FoodId = 5,
                            ManufacturerId = 8
                        },
                        new
                        {
                            Id = 6,
                            FoodId = 6,
                            ManufacturerId = 4
                        },
                        new
                        {
                            Id = 7,
                            FoodId = 7,
                            ManufacturerId = 5
                        },
                        new
                        {
                            Id = 8,
                            FoodId = 8,
                            ManufacturerId = 4
                        },
                        new
                        {
                            Id = 9,
                            FoodId = 9,
                            ManufacturerId = 10
                        },
                        new
                        {
                            Id = 10,
                            FoodId = 10,
                            ManufacturerId = 10
                        });
                });

            modelBuilder.Entity("backend.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerId = 10,
                            Name = "Grand Cherokee",
                            Speed = 433
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerId = 7,
                            Name = "LeBaron",
                            Speed = 191
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerId = 4,
                            Name = "Jetta",
                            Speed = 125
                        },
                        new
                        {
                            Id = 4,
                            ManufacturerId = 2,
                            Name = "Colorado",
                            Speed = 95
                        },
                        new
                        {
                            Id = 5,
                            ManufacturerId = 4,
                            Name = "Mustang",
                            Speed = 155
                        },
                        new
                        {
                            Id = 6,
                            ManufacturerId = 3,
                            Name = "XTS",
                            Speed = 339
                        },
                        new
                        {
                            Id = 7,
                            ManufacturerId = 2,
                            Name = "Mustang",
                            Speed = 276
                        },
                        new
                        {
                            Id = 8,
                            ManufacturerId = 9,
                            Name = "Taurus",
                            Speed = 25
                        },
                        new
                        {
                            Id = 9,
                            ManufacturerId = 9,
                            Name = "CX-9",
                            Speed = 445
                        },
                        new
                        {
                            Id = 10,
                            ManufacturerId = 6,
                            Name = "Golf",
                            Speed = 268
                        });
                });

            modelBuilder.Entity("backend.Models.ManufacturerFood", b =>
                {
                    b.HasOne("backend.Models.Food", "Food")
                        .WithMany("manufacturerFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Manufacturer", "Manufacturer")
                        .WithMany("ManufacturerFoods")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.Vehicle", b =>
                {
                    b.HasOne("backend.Models.Manufacturer", "Manufacturer")
                        .WithMany("Vehicles")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.Food", b =>
                {
                    b.Navigation("manufacturerFoods");
                });

            modelBuilder.Entity("backend.Models.Manufacturer", b =>
                {
                    b.Navigation("ManufacturerFoods");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
